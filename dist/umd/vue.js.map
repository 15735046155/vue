{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/*\n * @Descripttion: 数组劫持，原理是调用数组的的特定的7个方法的时候，先重新定义一个方法，先走自己的逻辑，然后在走数组本身的逻辑，然后返回值\n * @Author: 黄佳佳\n * @Date: 2021-01-16 15:39:40\n * @LastEditors: 黄佳佳\n * @LastEditTime: 2021-01-16 17:15:35\n */\n// 拿到数组原型上的方法（原来的方法）\nlet oldArrayProtoMethods = Array.prototype;\n// 继承下原数组\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\nlet methods = [\n    \"push\",\n    \"pop\",\n    \"shift\",\n    \"unshift\",\n    \"reserve\",\n    \"sort\",\n    \"splice\"\n]\nmethods.forEach(method => {\n    arrayMethods[method] = function(...args){\n        // 劫持后走自己的逻辑\n        \n        // 数组本身的逻辑\n        const result = oldArrayProtoMethods[method].apply(this, args);\n\n        let inserted;\n        let ob = this.__ob__;\n        // push unshift这两个方法追加的内容可能是对象类型，应该被劫持后再次观测\n        switch(method){\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break;\n            case 'splice': // vue.$set原理\n                inserted = args.slice(2); // arr.splice(0,1,{a:1})从地0个开始增加一个{a:1}\n            default:\n                break;\n        }\n        // 给数组新增的值也要观测\n        if (inserted) {\n            ob.observerArray(inserted)\n        }\n        return result;\n    }\n})\n","/*\n * @Descripttion: \n * @Author: 黄佳佳\n * @Date: 2021-01-16 17:45:35\n * @LastEditors: 黄佳佳\n * @LastEditTime: 2021-01-16 18:04:15\n */\n// 自己定义的代理数据方法\nexport function proxy(vm, data, key) {\n    console.log(vm[data][key])\n    Object.defineProperty(vm, key,{\n        get() {\n            return vm[data][key]; // vm._data.a --> vm.a\n        },\n        set(newValue) {\n            vm[data][key] = newValue // vm._data.a = 1  --> vm.a = 1\n        }\n    })\n}\nexport function defineProperty(target, key, value) {\n    // Object.defineProperty(value,'__ob__',{\n    Object.defineProperty(target,key,{\n        enumerable: false, // 不能被枚举，不能被循环出来\n        configurable: false,\n        // value: this // 把当前的实例定义在value上，方便在数组劫持的js中使用写在对象观测js中的observerArray方法\n        value\n    })\n}\n// 是否是对象 true：对象  false: 不是对象\nexport function isObject(data) {\n    return typeof data == \"object\" && data != null\n}\n// 是否是数组 true：数组  false: 不是数组\nexport function isArray(data) {\n    return Array.isArray(data)\n}\n","/*\n * @Descripttion: 数据劫持，把数据变成响应式的数据\n * @Author: 黄佳佳\n * @Date: 2021-01-16 15:02:01\n * @LastEditors: 黄佳佳\n * @LastEditTime: 2021-01-16 18:04:29\n */\n\nimport { arrayMethods } from \"./array\";\nimport { defineProperty, isObject, isArray } from \"../util\"\n// 检测数据的类\nclass Observer {\n    constructor(value){\n        //判断一个对象是否被观测过，看是都有__ob__这个属性\n        defineProperty(value,'__ob__',this)\n\n        if(isArray(value)){\n            // push shift  unshifyt  splice sort reserve pop这些方法会改变数组、函数劫持\n            // 当值为数组的时候，劫持\n            value.__proto__ = arrayMethods;\n            // 观测数组中的对象类型，当数组的值为对象的时候 [{a:1}],更改arr[0].a = 100的时候\n            this.observerArray(value)\n        } else {\n            // 使用defineProperty  重新定义属性\n            this.walk(value)\n        }\n    }\n    observerArray(value){\n        value.forEach(item => {\n            observer(item) // 观测数组中的每一项\n        });\n    }\n    walk(data){\n        let keys = Object.keys(data); // 获取对象key\n        keys.forEach(key => {\n            defineReactive(data, key, data[key]); // \n        })\n    }\n}\n\n// 数据劫持\nfunction defineReactive(data, key, value) {\n    //递归 {a:{a:1}}\n    observer(value)\n    Object.defineProperty(data, key, {\n        get(){\n            console.log(\"1111\")\n            return value\n        },\n        set(newValue){\n            console.log(\"22222\")\n            if(newValue == value) return;\n            observer(value) // 用户设置的值还是对象的话那就继续监控\n            value = newValue\n        }\n    })\n}\n// 检测的data 必须是object  但是不能是null\nexport function observer(data) {\n    // 检测的data不是对象，直接返回,typeof null == \"object\"\n    if(!isObject()) {\n        console.log(\"bubuu\")\n        return data\n    }\n    // 如果被检测过就不用再检测了\n    if(data.__ob__){\n        return data\n    }\n    // 检测的data是对象，处理\n    return new Observer(data)\n}","import { observer } from \"./observer/index.js\";\nimport { proxy } from \"./util.js\";\n\n/*\n * @Descripttion: 初始化状态的文件\n * @Author: 黄佳佳\n * @Date: 2021-01-16 14:25:15\n * @LastEditors: 黄佳佳\n * @LastEditTime: 2021-01-16 17:56:32\n */\nexport function initState(vm){\n    const opts = vm.$options;\n    if(opts.props){\n        initProps(vm)\n    }\n    if(opts.methods){\n        initMethods(vm)\n    }\n    if(opts.data){\n        initData(vm)\n    }\n    if(opts.computed){\n        initComputed(vm)\n    }\n    if(opts.watch){\n        initWatch(vm)\n    }\n}\nfunction initProps(vm) {};\nfunction initMethods(vm) {};\n\nfunction initData(vm) {\n    let data = vm.$options.data;\n    // 判断data是否是对象，data.call是因为如果是个函数执行的话\n    // vm._data代理当前的data的返回值\n    vm._data = data = typeof data == \"function\" ? data.call(vm) : data\n    // console.log(data) // {a:1}\n    // 数据的劫持方案，对象object.definproperty,数组 单独处理\n\n    // 代理数据 vm._data.a  -->  vm.a\n    for (let key in data) {\n        // 自己写的代理方法\n        proxy(vm, '_data', key)\n    }\n\n    observer(data)\n};\nfunction initComputed(vm) {};\nfunction initWatch(vm) {};\n","/*\n * @Descripttion: 初始化插件，插件都是一个函数，扩展初始化文件\n * @Author: 黄佳佳\n * @Date: 2021-01-16 11:18:11\n * @LastEditors: 黄佳佳\n * @LastEditTime: 2021-01-16 14:56:49\n */\nimport { initState } from \"./state\"\n// 初始化， vue是构造函数\nexport function initMixin(Vue) {\n    // 给vue原型上增加一个初始化的扩展方法 _init\n    Vue.prototype._init = function (options) {\n        const vm = this;\n        vm.$options = options;\n        // 初始化状态（将数据做一个初始化的劫持，当改变数据的时候应该更新试图）\n        // vue组件中有很多状态 data  props watch computed \n        initState(vm);\n    }\n}","import { initMinxin } from \"./init\"\n\n/*\n * @Descripttion: vue的入口，类编写， 用于扩展vue原型文件\n * @Author: 黄佳佳\n * @Date: 2021-01-16 10:49:45\n * @LastEditors: 黄佳佳\n * @LastEditTime: 2021-01-16 14:55:43\n */\nimport { initMixin } from \"./init\"\n\nfunction Vue(options){\n    this._init(options); // 入口方法，做初始化操作\n}\n// 初始化的插件\ninitMixin(Vue)\n\nexport default Vue"],"names":[],"mappings":"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"}